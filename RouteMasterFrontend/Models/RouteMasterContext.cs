// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace RouteMasterFrontend.Models;

public partial class RouteMasterContext : DbContext
{
    public RouteMasterContext(DbContextOptions<RouteMasterContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Accommodation> Accommodations { get; set; }

    public virtual DbSet<AccommodationImage> AccommodationImages { get; set; }

    public virtual DbSet<AccommodationServiceInfo> AccommodationServiceInfos { get; set; }

    public virtual DbSet<AcommodationCategory> AcommodationCategories { get; set; }

    public virtual DbSet<Activity> Activities { get; set; }

    public virtual DbSet<ActivityCategory> ActivityCategories { get; set; }

    public virtual DbSet<ActivityImage> ActivityImages { get; set; }

    public virtual DbSet<ActivityProduct> ActivityProducts { get; set; }

    public virtual DbSet<Administrator> Administrators { get; set; }

    public virtual DbSet<Attraction> Attractions { get; set; }

    public virtual DbSet<AttractionCategory> AttractionCategories { get; set; }

    public virtual DbSet<AttractionClick> AttractionClicks { get; set; }

    public virtual DbSet<AttractionImage> AttractionImages { get; set; }

    public virtual DbSet<AttractionTag> AttractionTags { get; set; }

    public virtual DbSet<Cart> Carts { get; set; }

    public virtual DbSet<CartAccommodationDetail> CartAccommodationDetails { get; set; }

    public virtual DbSet<CartActivitiesDetail> CartActivitiesDetails { get; set; }

    public virtual DbSet<CartExtraServicesDetail> CartExtraServicesDetails { get; set; }

    public virtual DbSet<CommentAccommodationLike> CommentAccommodationLikes { get; set; }

    public virtual DbSet<CommentStatus> CommentStatuses { get; set; }

    public virtual DbSet<CommentsAccommodation> CommentsAccommodations { get; set; }

    public virtual DbSet<CommentsAccommodationImage> CommentsAccommodationImages { get; set; }

    public virtual DbSet<CommentsAttraction> CommentsAttractions { get; set; }

    public virtual DbSet<CommentsAttractionImage> CommentsAttractionImages { get; set; }

    public virtual DbSet<Coupon> Coupons { get; set; }

    public virtual DbSet<ExtraService> ExtraServices { get; set; }

    public virtual DbSet<ExtraServiceImage> ExtraServiceImages { get; set; }

    public virtual DbSet<ExtraServiceProduct> ExtraServiceProducts { get; set; }

    public virtual DbSet<Faq> Faqs { get; set; }

    public virtual DbSet<Faqcategory> Faqcategories { get; set; }

    public virtual DbSet<FavoriteAttraction> FavoriteAttractions { get; set; }

    public virtual DbSet<Member> Members { get; set; }

    public virtual DbSet<MemberImage> MemberImages { get; set; }

    public virtual DbSet<Order> Orders { get; set; }

    public virtual DbSet<OrderAccommodationDetail> OrderAccommodationDetails { get; set; }

    public virtual DbSet<OrderActivitiesDetail> OrderActivitiesDetails { get; set; }

    public virtual DbSet<OrderExtraServicesDetail> OrderExtraServicesDetails { get; set; }

    public virtual DbSet<OrderHandleStatus> OrderHandleStatuses { get; set; }

    public virtual DbSet<PackageCoupon> PackageCoupons { get; set; }

    public virtual DbSet<PackageTour> PackageTours { get; set; }

    public virtual DbSet<Partner> Partners { get; set; }

    public virtual DbSet<PaymentMethod> PaymentMethods { get; set; }

    public virtual DbSet<PaymentStatus> PaymentStatuses { get; set; }

    public virtual DbSet<Permission> Permissions { get; set; }

    public virtual DbSet<Region> Regions { get; set; }

    public virtual DbSet<ReportReason> ReportReasons { get; set; }

    public virtual DbSet<ReportedAttractionComment> ReportedAttractionComments { get; set; }

    public virtual DbSet<Room> Rooms { get; set; }

    public virtual DbSet<RoomImage> RoomImages { get; set; }

    public virtual DbSet<RoomProduct> RoomProducts { get; set; }

    public virtual DbSet<RoomServiceInfo> RoomServiceInfos { get; set; }

    public virtual DbSet<RoomType> RoomTypes { get; set; }

    public virtual DbSet<Schedule> Schedules { get; set; }

    public virtual DbSet<ServiceInfoCategory> ServiceInfoCategories { get; set; }

    public virtual DbSet<SystemImage> SystemImages { get; set; }

    public virtual DbSet<SystemMessage> SystemMessages { get; set; }

    public virtual DbSet<Town> Towns { get; set; }

    public virtual DbSet<Transportation> Transportations { get; set; }

    public virtual DbSet<TravelPlan> TravelPlans { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Accommodation>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Accommod__3214EC079BCE4CD7");

            entity.Property(e => e.Address)
                .IsRequired()
                .HasMaxLength(300);
            entity.Property(e => e.CreateDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(2000);
            entity.Property(e => e.Image).HasMaxLength(200);
            entity.Property(e => e.IndustryEmail).HasMaxLength(255);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(30);
            entity.Property(e => e.PhoneNumber).HasMaxLength(20);
            entity.Property(e => e.Website).HasMaxLength(2000);

            entity.HasOne(d => d.AcommodationCategory).WithMany(p => p.Accommodations)
                .HasForeignKey(d => d.AcommodationCategoryId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Accommoda__Acomm__489AC854");

            entity.HasOne(d => d.Partner).WithMany(p => p.Accommodations)
                .HasForeignKey(d => d.PartnerId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Accommoda__Partn__498EEC8D");

            entity.HasOne(d => d.Region).WithMany(p => p.Accommodations)
                .HasForeignKey(d => d.RegionId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Accommoda__Regio__4A8310C6");

            entity.HasOne(d => d.Town).WithMany(p => p.Accommodations)
                .HasForeignKey(d => d.TownId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Accommoda__TownI__4B7734FF");

            entity.HasMany(d => d.AccommodationServiceInfos).WithMany(p => p.Accommodations)
                .UsingEntity<Dictionary<string, object>>(
                    "AccommodationServiceInfosAccommodation",
                    r => r.HasOne<AccommodationServiceInfo>().WithMany()
                        .HasForeignKey("AccommodationServiceInfoId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__ServiceIn__Accom__0F2D40CE"),
                    l => l.HasOne<Accommodation>().WithMany()
                        .HasForeignKey("AccommodationId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__Accommoda__Accom__4D5F7D71"),
                    j =>
                    {
                        j.HasKey("AccommodationId", "AccommodationServiceInfoId").HasName("PK__Accommod__DE629F1B5BF8AAEF");
                        j.ToTable("AccommodationServiceInfos_Accommodations");
                    });
        });

        modelBuilder.Entity<AccommodationImage>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Accommod__3214EC074F75BBD7");

            entity.Property(e => e.Image).HasMaxLength(200);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(30);

            entity.HasOne(d => d.Accommodation).WithMany(p => p.AccommodationImages)
                .HasForeignKey(d => d.AccommodationId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Accommoda__Accom__47A6A41B");
        });

        modelBuilder.Entity<AccommodationServiceInfo>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Accommod__3214EC07A8BB0F97");

            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(30);

            entity.HasOne(d => d.ServiceInfoCategory).WithMany(p => p.AccommodationServiceInfos)
                .HasForeignKey(d => d.ServiceInfoCategoryId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_AccommodationServiceInfos_ServiceInfoCategories");
        });

        modelBuilder.Entity<AcommodationCategory>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Acommoda__3214EC07478CA181");

            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(30);
        });

        modelBuilder.Entity<Activity>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Activiti__3214EC07CE3A923A");

            entity.Property(e => e.Description)
                .IsRequired()
                .HasMaxLength(2000);
            entity.Property(e => e.Image)
                .IsRequired()
                .HasMaxLength(200);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(30);

            entity.HasOne(d => d.ActivityCategory).WithMany(p => p.Activities)
                .HasForeignKey(d => d.ActivityCategoryId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Activitie__Activ__4F47C5E3");

            entity.HasOne(d => d.Attraction).WithMany(p => p.Activities)
                .HasForeignKey(d => d.AttractionId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Activitie__Attra__3C34F16F");

            entity.HasOne(d => d.Region).WithMany(p => p.Activities)
                .HasForeignKey(d => d.RegionId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Activitie__Regio__51300E55");
        });

        modelBuilder.Entity<ActivityCategory>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Activity__3214EC0740C92B96");

            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(30);
        });

        modelBuilder.Entity<ActivityImage>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Activity__3214EC074A862C74");

            entity.Property(e => e.Image)
                .IsRequired()
                .HasMaxLength(200);

            entity.HasOne(d => d.Activity).WithMany(p => p.ActivityImages)
                .HasForeignKey(d => d.ActivityId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ActivityI__Activ__5224328E");
        });

        modelBuilder.Entity<ActivityProduct>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Activity__3214EC070AFAE1BE");

            entity.Property(e => e.Date).HasColumnType("date");

            entity.HasOne(d => d.Activity).WithMany(p => p.ActivityProducts)
                .HasForeignKey(d => d.ActivityId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ActivityP__Activ__531856C7");
        });

        modelBuilder.Entity<Administrator>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Administ__3214EC071B1A3AAF");

            entity.HasIndex(e => e.Email, "UQ__Administ__A9D1053456DB7CD2").IsUnique();

            entity.Property(e => e.ConfirmCode).HasMaxLength(300);
            entity.Property(e => e.CreateDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.EncryptedPassword)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.FirstName)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.LastName)
                .IsRequired()
                .HasMaxLength(50);

            entity.HasOne(d => d.Permission).WithMany(p => p.Administrators)
                .HasForeignKey(d => d.PermissionId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Administr__Permi__540C7B00");
        });

        modelBuilder.Entity<Attraction>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Attracti__3214EC0706CE2201");

            entity.Property(e => e.Address)
                .IsRequired()
                .HasMaxLength(300);
            entity.Property(e => e.Description)
                .IsRequired()
                .HasMaxLength(4000);
            entity.Property(e => e.Image).HasMaxLength(200);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(30);
            entity.Property(e => e.Website).HasMaxLength(2000);

            entity.HasOne(d => d.AttractionCategory).WithMany(p => p.Attractions)
                .HasForeignKey(d => d.AttractionCategoryId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Attractio__Attra__42E1EEFE");

            entity.HasOne(d => d.Region).WithMany(p => p.Attractions)
                .HasForeignKey(d => d.RegionId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Attractio__Regio__43D61337");

            entity.HasOne(d => d.Town).WithMany(p => p.Attractions)
                .HasForeignKey(d => d.TownId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Attractio__TownI__44CA3770");

            entity.HasMany(d => d.Tags).WithMany(p => p.Attractions)
                .UsingEntity<Dictionary<string, object>>(
                    "TagsAttraction",
                    r => r.HasOne<AttractionTag>().WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__Tags_Attr__TagId__15DA3E5D"),
                    l => l.HasOne<Attraction>().WithMany()
                        .HasForeignKey("AttractionId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__Tags_Attr__Attra__01D345B0"),
                    j =>
                    {
                        j.HasKey("AttractionId", "TagId").HasName("PK__Tags_Att__0CB582C06FD3EDEC");
                        j.ToTable("Tags_Attractions");
                    });
        });

        modelBuilder.Entity<AttractionCategory>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Attracti__3214EC0719048AAA");

            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(30);
        });

        modelBuilder.Entity<AttractionClick>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Attracti__3214EC07D7E9DE7D");

            entity.ToTable("AttractionClick");

            entity.Property(e => e.ClickDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");

            entity.HasOne(d => d.Attraction).WithMany(p => p.AttractionClicks)
                .HasForeignKey(d => d.AttractionId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Attractio__Attra__40F9A68C");
        });

        modelBuilder.Entity<AttractionImage>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Attracti__3214EC07129FB03A");

            entity.Property(e => e.Image)
                .IsRequired()
                .HasMaxLength(200);

            entity.HasOne(d => d.Attraction).WithMany(p => p.AttractionImages)
                .HasForeignKey(d => d.AttractionId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Attractio__Attra__41EDCAC5");
        });

        modelBuilder.Entity<AttractionTag>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Attracti__3214EC07BEFAF542");

            entity.Property(e => e.Name).HasMaxLength(50);
        });

        modelBuilder.Entity<Cart>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Carts__3214EC0703628BA4");

            entity.HasOne(d => d.Member).WithMany(p => p.Carts)
                .HasForeignKey(d => d.MemberId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Carts__MemberId__5F7E2DAC");
        });

        modelBuilder.Entity<CartAccommodationDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Cart_Acc__3214EC07572534A0");

            entity.ToTable("Cart_AccommodationDetails");

            entity.HasOne(d => d.Cart).WithMany(p => p.CartAccommodationDetails)
                .HasForeignKey(d => d.CartId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Cart_Acco__CartI__59C55456");

            entity.HasOne(d => d.RoomProduct).WithMany(p => p.CartAccommodationDetails)
                .HasForeignKey(d => d.RoomProductId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Cart_Acco__RoomP__46B27FE2");
        });

        modelBuilder.Entity<CartActivitiesDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Cart_Act__3214EC079E7E414F");

            entity.ToTable("Cart_ActivitiesDetails");

            entity.HasOne(d => d.ActivityProduct).WithMany(p => p.CartActivitiesDetails)
                .HasForeignKey(d => d.ActivityProductId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Cart_Acti__Activ__5BAD9CC8");

            entity.HasOne(d => d.Cart).WithMany(p => p.CartActivitiesDetails)
                .HasForeignKey(d => d.CartId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Cart_Acti__CartI__5CA1C101");
        });

        modelBuilder.Entity<CartExtraServicesDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Cart_Ext__3214EC071442BA55");

            entity.ToTable("Cart_ExtraServicesDetails");

            entity.HasOne(d => d.Cart).WithMany(p => p.CartExtraServicesDetails)
                .HasForeignKey(d => d.CartId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Cart_Extr__CartI__5D95E53A");

            entity.HasOne(d => d.ExtraServiceProduct).WithMany(p => p.CartExtraServicesDetails)
                .HasForeignKey(d => d.ExtraServiceProductId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Cart_Extr__Extra__5E8A0973");
        });

        modelBuilder.Entity<CommentAccommodationLike>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Comment___3214EC074B284A3D");

            entity.ToTable("Comment_Accommodation_Likes");

            entity.Property(e => e.CommentsAccommodationId).HasColumnName("Comments_AccommodationId");
            entity.Property(e => e.CreateDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");

            entity.HasOne(d => d.CommentsAccommodation).WithMany(p => p.CommentAccommodationLikes)
                .HasForeignKey(d => d.CommentsAccommodationId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Comment_Accommodation_Likes_Comments_Accommodations");

            entity.HasOne(d => d.Member).WithMany(p => p.CommentAccommodationLikes)
                .HasForeignKey(d => d.MemberId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Comment_A__Membe__607251E5");
        });

        modelBuilder.Entity<CommentStatus>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CommentS__3214EC07518EACF6");

            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<CommentsAccommodation>(entity =>
        {
            entity.ToTable("Comments_Accommodations");

            entity.Property(e => e.Cons).HasMaxLength(2000);
            entity.Property(e => e.CreateDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Pros).HasMaxLength(2000);
            entity.Property(e => e.Reply).HasMaxLength(2000);
            entity.Property(e => e.ReplyAt).HasColumnType("datetime");
            entity.Property(e => e.Title).HasMaxLength(50);

            entity.HasOne(d => d.Accommodation).WithMany(p => p.CommentsAccommodations)
                .HasForeignKey(d => d.AccommodationId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Comments___Accom__4F47C5E3");

            entity.HasOne(d => d.CommentStatus).WithMany(p => p.CommentsAccommodations)
                .HasForeignKey(d => d.CommentStatusId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Comments___Comme__503BEA1C");

            entity.HasOne(d => d.Member).WithMany(p => p.CommentsAccommodations)
                .HasForeignKey(d => d.MemberId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Comments___Membe__51300E55");
        });

        modelBuilder.Entity<CommentsAccommodationImage>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Comments__3214EC076996D378");

            entity.ToTable("Comments_AccommodationImages");

            entity.Property(e => e.CommentsAccommodationId).HasColumnName("Comments_AccommodationId");
            entity.Property(e => e.Image)
                .IsRequired()
                .HasMaxLength(200);

            entity.HasOne(d => d.CommentsAccommodation).WithMany(p => p.CommentsAccommodationImages)
                .HasForeignKey(d => d.CommentsAccommodationId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Comments_AccommodationImages_Comments_Accommodations");
        });

        modelBuilder.Entity<CommentsAttraction>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Comments__3214EC077CFD2E5D");

            entity.ToTable("Comments_Attractions");

            entity.Property(e => e.Content).HasMaxLength(2000);
            entity.Property(e => e.CreateDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");

            entity.HasOne(d => d.Attraction).WithMany(p => p.CommentsAttractions)
                .HasForeignKey(d => d.AttractionId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Comments___Attra__531856C7");

            entity.HasOne(d => d.Member).WithMany(p => p.CommentsAttractions)
                .HasForeignKey(d => d.MemberId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Comments___Membe__690797E6");
        });

        modelBuilder.Entity<CommentsAttractionImage>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Comments__3214EC0722BAD35D");

            entity.ToTable("Comments_AttractionImages");

            entity.Property(e => e.CommentsAttractionId).HasColumnName("Comments_AttractionId");
            entity.Property(e => e.Image)
                .IsRequired()
                .HasMaxLength(200);

            entity.HasOne(d => d.CommentsAttraction).WithMany(p => p.CommentsAttractionImages)
                .HasForeignKey(d => d.CommentsAttractionId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Comments___Comme__671F4F74");
        });

        modelBuilder.Entity<Coupon>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Coupons__3214EC07D7C584B5");

            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(20);
            entity.Property(e => e.StartDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<ExtraService>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ExtraSer__3214EC073D6CC7F2");

            entity.Property(e => e.Description)
                .IsRequired()
                .HasMaxLength(2000);
            entity.Property(e => e.Image)
                .IsRequired()
                .HasMaxLength(200);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(30);

            entity.HasOne(d => d.Attraction).WithMany(p => p.ExtraServices)
                .HasForeignKey(d => d.AttractionId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ExtraServ__Attra__56E8E7AB");

            entity.HasOne(d => d.Region).WithMany(p => p.ExtraServices)
                .HasForeignKey(d => d.RegionId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ExtraServ__Regio__6CD828CA");
        });

        modelBuilder.Entity<ExtraServiceImage>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ExtraSer__3214EC07B11D8FBD");

            entity.Property(e => e.Image)
                .IsRequired()
                .HasMaxLength(200);

            entity.HasOne(d => d.ExtraService).WithMany(p => p.ExtraServiceImages)
                .HasForeignKey(d => d.ExtraServiceId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ExtraServ__Extra__69FBBC1F");
        });

        modelBuilder.Entity<ExtraServiceProduct>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ExtraSer__3214EC077E380FF7");

            entity.Property(e => e.Date).HasColumnType("date");

            entity.HasOne(d => d.ExtraService).WithMany(p => p.ExtraServiceProducts)
                .HasForeignKey(d => d.ExtraServiceId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ExtraServ__Extra__6AEFE058");
        });

        modelBuilder.Entity<Faq>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__FAQs__3214EC07FE031935");

            entity.ToTable("FAQs");

            entity.Property(e => e.Answer)
                .IsRequired()
                .HasMaxLength(2000);
            entity.Property(e => e.CreateDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.FaqcategoryId).HasColumnName("FAQCategoryId");
            entity.Property(e => e.Image).HasMaxLength(200);
            entity.Property(e => e.ModifiedDate).HasColumnType("datetime");
            entity.Property(e => e.Question)
                .IsRequired()
                .HasMaxLength(2000);

            entity.HasOne(d => d.Faqcategory).WithMany(p => p.Faqs)
                .HasForeignKey(d => d.FaqcategoryId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__FAQs__FAQCategor__6DCC4D03");
        });

        modelBuilder.Entity<Faqcategory>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__FAQCateg__3214EC07E6BF6AC3");

            entity.ToTable("FAQCategories");

            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(30);
        });

        modelBuilder.Entity<FavoriteAttraction>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Favorite__3214EC0756B66710");

            entity.HasOne(d => d.Attraction).WithMany(p => p.FavoriteAttractions)
                .HasForeignKey(d => d.AttractionId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__FavoriteA__Attra__59C55456");

            entity.HasOne(d => d.Member).WithMany(p => p.FavoriteAttractions)
                .HasForeignKey(d => d.MemberId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__FavoriteA__Membe__6FB49575");
        });

        modelBuilder.Entity<Member>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Members__3214EC07C33B36F6");

            entity.HasIndex(e => e.Email, "UQ__Members__A9D105349993E6DE").IsUnique();

            entity.HasIndex(e => e.Account, "UQ__Members__B0C3AC46625AA0C2").IsUnique();

            entity.Property(e => e.Account)
                .IsRequired()
                .HasMaxLength(30);
            entity.Property(e => e.Address).HasMaxLength(255);
            entity.Property(e => e.Birthday).HasColumnType("datetime");
            entity.Property(e => e.CellPhoneNumber).HasMaxLength(10);
            entity.Property(e => e.ConfirmCode).HasMaxLength(300);
            entity.Property(e => e.CreateDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.EncryptedPassword).HasMaxLength(255);
            entity.Property(e => e.FaceBookAccessCode).HasMaxLength(300);
            entity.Property(e => e.FirstName)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.GoogleAccessCode).HasMaxLength(300);
            entity.Property(e => e.Image).HasMaxLength(200);
            entity.Property(e => e.LastName)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.LineAccessCode).HasMaxLength(300);
            entity.Property(e => e.LoginTime).HasColumnType("datetime");
        });

        modelBuilder.Entity<MemberImage>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MemberIm__3214EC07222825E4");

            entity.Property(e => e.Image)
                .IsRequired()
                .HasMaxLength(200);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(30);
        });

        modelBuilder.Entity<Order>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Orders__3214EC07C2152E18");

            entity.Property(e => e.CreateDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.ModifiedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");

            entity.HasOne(d => d.Coupons).WithMany(p => p.Orders)
                .HasForeignKey(d => d.CouponsId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Orders__CouponsI__65370702");

            entity.HasOne(d => d.Member).WithMany(p => p.Orders)
                .HasForeignKey(d => d.MemberId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Orders__MemberId__7A3223E8");

            entity.HasOne(d => d.OrderHandleStatus).WithMany(p => p.Orders)
                .HasForeignKey(d => d.OrderHandleStatusId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Orders__OrderHan__7B264821");

            entity.HasOne(d => d.PaymentMethod).WithMany(p => p.Orders)
                .HasForeignKey(d => d.PaymentMethodId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Orders__PaymentM__7C1A6C5A");

            entity.HasOne(d => d.PaymentStatus).WithMany(p => p.Orders)
                .HasForeignKey(d => d.PaymentStatusId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Orders__PaymentS__7D0E9093");
        });

        modelBuilder.Entity<OrderAccommodationDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__OrderAcc__3214EC074125B685");

            entity.Property(e => e.AccommodationName).HasMaxLength(50);
            entity.Property(e => e.CheckIn).HasColumnType("datetime");
            entity.Property(e => e.CheckOut).HasColumnType("datetime");
            entity.Property(e => e.Note).HasMaxLength(2000);
            entity.Property(e => e.RoomName).HasMaxLength(50);
            entity.Property(e => e.RoomType).HasMaxLength(50);

            entity.HasOne(d => d.Accommodation).WithMany(p => p.OrderAccommodationDetails)
                .HasForeignKey(d => d.AccommodationId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__OrderAcco__Accom__70A8B9AE");

            entity.HasOne(d => d.Order).WithMany(p => p.OrderAccommodationDetails)
                .HasForeignKey(d => d.OrderId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__OrderAcco__Order__719CDDE7");

            entity.HasOne(d => d.RoomProduct).WithMany(p => p.OrderAccommodationDetails)
                .HasForeignKey(d => d.RoomProductId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__OrderAcco__RoomP__5E8A0973");
        });

        modelBuilder.Entity<OrderActivitiesDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__OrderAct__3214EC07F5D8CE1B");

            entity.Property(e => e.ActivityName)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Date).HasColumnType("date");

            entity.HasOne(d => d.Activity).WithMany(p => p.OrderActivitiesDetails)
                .HasForeignKey(d => d.ActivityId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__OrderActi__Activ__73852659");

            entity.HasOne(d => d.ActivityProduct).WithMany(p => p.OrderActivitiesDetails)
                .HasForeignKey(d => d.ActivityProductId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__OrderActi__Activ__74794A92");

            entity.HasOne(d => d.Order).WithMany(p => p.OrderActivitiesDetails)
                .HasForeignKey(d => d.OrderId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__OrderActi__Order__756D6ECB");
        });

        modelBuilder.Entity<OrderExtraServicesDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__OrderExt__3214EC07F12E9B23");

            entity.Property(e => e.Date).HasColumnType("date");
            entity.Property(e => e.ExtraServiceName)
                .IsRequired()
                .HasMaxLength(100);

            entity.HasOne(d => d.ExtraService).WithMany(p => p.OrderExtraServicesDetails)
                .HasForeignKey(d => d.ExtraServiceId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__OrderExtr__Extra__76619304");

            entity.HasOne(d => d.ExtraServiceProduct).WithMany(p => p.OrderExtraServicesDetails)
                .HasForeignKey(d => d.ExtraServiceProductId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__OrderExtr__Extra__7755B73D");

            entity.HasOne(d => d.Order).WithMany(p => p.OrderExtraServicesDetails)
                .HasForeignKey(d => d.OrderId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__OrderExtr__Order__7849DB76");
        });

        modelBuilder.Entity<OrderHandleStatus>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__OrderHan__3214EC072CCF354A");

            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(30);
        });

        modelBuilder.Entity<PackageCoupon>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PackageC__3214EC076812FB02");
        });

        modelBuilder.Entity<PackageTour>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PackageT__3214EC0724BCC4F3");

            entity.Property(e => e.Description)
                .IsRequired()
                .HasMaxLength(2000);

            entity.HasOne(d => d.PackageCoupon).WithMany(p => p.PackageTours)
                .HasForeignKey(d => d.PackageCouponId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__PackageTo__Packa__03BB8E22");

            entity.HasMany(d => d.Activities).WithMany(p => p.PackageTours)
                .UsingEntity<Dictionary<string, object>>(
                    "PackageActivity",
                    r => r.HasOne<Activity>().WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__PackageAc__Activ__7E02B4CC"),
                    l => l.HasOne<PackageTour>().WithMany()
                        .HasForeignKey("PackageTourId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__PackageAc__Packa__7EF6D905"),
                    j =>
                    {
                        j.HasKey("PackageTourId", "ActivityId").HasName("PK__PackageA__95FB0D540A90CEC3");
                        j.ToTable("PackageActivities");
                    });

            entity.HasMany(d => d.Attractions).WithMany(p => p.PackageTours)
                .UsingEntity<Dictionary<string, object>>(
                    "PackageAttraction",
                    r => r.HasOne<Attraction>().WithMany()
                        .HasForeignKey("AttractionId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__PackageAt__Attra__6CD828CA"),
                    l => l.HasOne<PackageTour>().WithMany()
                        .HasForeignKey("PackageTourId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__PackageAt__Packa__00DF2177"),
                    j =>
                    {
                        j.HasKey("PackageTourId", "AttractionId").HasName("PK__PackageA__2C0A63F81FF09626");
                        j.ToTable("PackageAttractions");
                    });

            entity.HasMany(d => d.ExtraServices).WithMany(p => p.PackageTours)
                .UsingEntity<Dictionary<string, object>>(
                    "PackageExtraService",
                    r => r.HasOne<ExtraService>().WithMany()
                        .HasForeignKey("ExtraServiceId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__PackageEx__Extra__01D345B0"),
                    l => l.HasOne<PackageTour>().WithMany()
                        .HasForeignKey("PackageTourId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__PackageEx__Packa__02C769E9"),
                    j =>
                    {
                        j.HasKey("PackageTourId", "ExtraServiceId").HasName("PK__PackageE__0943AA62BD2F4927");
                        j.ToTable("PackageExtraServices");
                    });
        });

        modelBuilder.Entity<Partner>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Partners__3214EC070D470490");

            entity.HasIndex(e => e.Email, "UQ__Partners__A9D10534680B1CCB").IsUnique();

            entity.Property(e => e.ConfirmCode).HasMaxLength(300);
            entity.Property(e => e.CreateDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.EncryptedPassword).HasMaxLength(255);
            entity.Property(e => e.FaceBookAccessCode).HasMaxLength(300);
            entity.Property(e => e.FirstName)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.GoogleAccessCode).HasMaxLength(300);
            entity.Property(e => e.LastName)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.LineAccessCode).HasMaxLength(300);
            entity.Property(e => e.LoginTime).HasColumnType("datetime");
        });

        modelBuilder.Entity<PaymentMethod>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PaymentM__3214EC07CA2DB697");

            entity.Property(e => e.Description)
                .IsRequired()
                .HasMaxLength(2000);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(30);
        });

        modelBuilder.Entity<PaymentStatus>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PaymentS__3214EC07A59FFC0C");

            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(30);
        });

        modelBuilder.Entity<Permission>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Permissi__3214EC07C29CF99C");

            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(30);
        });

        modelBuilder.Entity<Region>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Regions__3214EC072100F53F");

            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(30);
        });

        modelBuilder.Entity<ReportReason>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ReportRe__3214EC071D8E25D9");

            entity.Property(e => e.Reason).HasMaxLength(50);
        });

        modelBuilder.Entity<ReportedAttractionComment>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Reported__3214EC07F5DDE5A4");

            entity.HasOne(d => d.CommentAttraction).WithMany(p => p.ReportedAttractionComments)
                .HasForeignKey(d => d.CommentAttractionId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ReportedA__Comme__0A688BB1");

            entity.HasOne(d => d.ReportReason).WithMany(p => p.ReportedAttractionComments)
                .HasForeignKey(d => d.ReportReasonId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ReportedA__Repor__0B5CAFEA");
        });

        modelBuilder.Entity<Room>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Rooms__3214EC075B857A2B");

            entity.Property(e => e.Description).HasMaxLength(2000);
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(30);

            entity.HasOne(d => d.Accommodation).WithMany(p => p.Rooms)
                .HasForeignKey(d => d.AccommodationId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Rooms__Accommoda__0E391C95");

            entity.HasOne(d => d.RoomType).WithMany(p => p.Rooms)
                .HasForeignKey(d => d.RoomTypeId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Rooms__RoomTypeI__0F2D40CE");

            entity.HasMany(d => d.RoomServiceInfos).WithMany(p => p.Rooms)
                .UsingEntity<Dictionary<string, object>>(
                    "RoomServiceInfosRoom",
                    r => r.HasOne<RoomServiceInfo>().WithMany()
                        .HasForeignKey("RoomServiceInfoId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__RoomServi__RoomS__1209AD79"),
                    l => l.HasOne<Room>().WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__RoomServi__RoomI__11158940"),
                    j =>
                    {
                        j.HasKey("RoomId", "RoomServiceInfoId").HasName("PK__RoomServ__B47A7613A8A893FD");
                        j.ToTable("RoomServiceInfos_Rooms");
                    });
        });

        modelBuilder.Entity<RoomImage>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__RoomImag__3214EC07FB4BEECB");

            entity.Property(e => e.Image)
                .IsRequired()
                .HasMaxLength(200);

            entity.HasOne(d => d.Room).WithMany(p => p.RoomImages)
                .HasForeignKey(d => d.RoomId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__RoomImage__RoomI__0C50D423");
        });

        modelBuilder.Entity<RoomProduct>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__RoomProd__3214EC072D4145EF");

            entity.Property(e => e.Date).HasColumnType("date");
            entity.Property(e => e.NewPrice).HasColumnType("decimal(18, 0)");

            entity.HasOne(d => d.Room).WithMany(p => p.RoomProducts)
                .HasForeignKey(d => d.RoomId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__RoomProdu__RoomI__793DFFAF");
        });

        modelBuilder.Entity<RoomServiceInfo>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__RoomServ__3214EC0788E6FC44");

            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(30);

            entity.HasOne(d => d.ServiceInfoCategory).WithMany(p => p.RoomServiceInfos)
                .HasForeignKey(d => d.ServiceInfoCategoryId)
                .HasConstraintName("FK_RoomServiceInfos_ServiceInfoCategories");
        });

        modelBuilder.Entity<RoomType>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__RoomType__3214EC0731F0D261");

            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(30);
        });

        modelBuilder.Entity<Schedule>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Schedule__3214EC07C8F3AAB2");

            entity.Property(e => e.Content)
                .IsRequired()
                .HasMaxLength(2000);
            entity.Property(e => e.CreateDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.EndTime).HasColumnType("datetime");
            entity.Property(e => e.StartTime).HasColumnType("datetime");

            entity.HasOne(d => d.Member).WithMany(p => p.Schedules)
                .HasForeignKey(d => d.MemberId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Schedules__Membe__7FEAFD3E");
        });

        modelBuilder.Entity<ServiceInfoCategory>(entity =>
        {
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<SystemImage>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__SystemIm__3214EC07C73AEFAD");

            entity.Property(e => e.Image)
                .IsRequired()
                .HasMaxLength(200);
        });

        modelBuilder.Entity<SystemMessage>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__SystemMe__3214EC07F92E987E");

            entity.Property(e => e.Content)
                .IsRequired()
                .HasMaxLength(2000);

            entity.HasOne(d => d.Member).WithMany(p => p.SystemMessages)
                .HasForeignKey(d => d.MemberId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__SystemMes__Membe__13F1F5EB");
        });

        modelBuilder.Entity<Town>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Towns__3214EC071CFD3BD4");

            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(30);

            entity.HasOne(d => d.Region).WithMany(p => p.Towns)
                .HasForeignKey(d => d.RegionId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Towns__RegionId__16CE6296");
        });

        modelBuilder.Entity<Transportation>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Transpor__3214EC07BC0FC0A1");

            entity.ToTable("Transportation");

            entity.Property(e => e.Arrival)
                .IsRequired()
                .HasMaxLength(200);
            entity.Property(e => e.Departure)
                .IsRequired()
                .HasMaxLength(200);
            entity.Property(e => e.Vehicle)
                .IsRequired()
                .HasMaxLength(50);

            entity.HasOne(d => d.TravelPlan).WithMany(p => p.Transportations)
                .HasForeignKey(d => d.TravelPlanId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Transport__Trave__17C286CF");
        });

        modelBuilder.Entity<TravelPlan>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__TravelPl__3214EC07E11F7920");

            entity.Property(e => e.CreateDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");

            entity.HasOne(d => d.Member).WithMany(p => p.TravelPlans)
                .HasForeignKey(d => d.MemberId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__TravelPla__Membe__18B6AB08");

            entity.HasMany(d => d.ActivityProducts).WithMany(p => p.TravelPlans)
                .UsingEntity<Dictionary<string, object>>(
                    "PlanActivity",
                    r => r.HasOne<ActivityProduct>().WithMany()
                        .HasForeignKey("ActivityProductId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__PlanActiv__Activ__04AFB25B"),
                    l => l.HasOne<TravelPlan>().WithMany()
                        .HasForeignKey("TravelPlanId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__PlanActiv__Trave__05A3D694"),
                    j =>
                    {
                        j.HasKey("TravelPlanId", "ActivityProductId").HasName("PK__PlanActi__EB02F9A0636318AD");
                        j.ToTable("PlanActivities");
                    });

            entity.HasMany(d => d.Attractions).WithMany(p => p.TravelPlans)
                .UsingEntity<Dictionary<string, object>>(
                    "PlanAttraction",
                    r => r.HasOne<Attraction>().WithMany()
                        .HasForeignKey("AttractionId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__PlanAttra__Attra__73852659"),
                    l => l.HasOne<TravelPlan>().WithMany()
                        .HasForeignKey("TravelPlanId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__PlanAttra__Trave__078C1F06"),
                    j =>
                    {
                        j.HasKey("TravelPlanId", "AttractionId").HasName("PK__PlanAttr__99DDD1EEA8364CBB");
                        j.ToTable("PlanAttractions");
                    });

            entity.HasMany(d => d.ExtraServiceProducts).WithMany(p => p.TravelPlans)
                .UsingEntity<Dictionary<string, object>>(
                    "PlanExtraService",
                    r => r.HasOne<ExtraServiceProduct>().WithMany()
                        .HasForeignKey("ExtraServiceProductId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__PlanExtra__Extra__0880433F"),
                    l => l.HasOne<TravelPlan>().WithMany()
                        .HasForeignKey("TravelPlanId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__PlanExtra__Trave__09746778"),
                    j =>
                    {
                        j.HasKey("TravelPlanId", "ExtraServiceProductId").HasName("PK__PlanExtr__4FFE2B65F207B5A2");
                        j.ToTable("PlanExtraServices");
                    });
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}